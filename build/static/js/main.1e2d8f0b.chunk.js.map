{"version":3,"sources":["displayResults.tsx","helperFunctions.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["rankObject","suiteObject","S","H","D","C","DisplayResults","entries","sort","a","b","mean","map","e","className","cards","c","rank","suite","toFixed","max","firstQuartile","secondQuartile","thirdQuartile","cardRanks","_","range","cardSuites","deck","forEach","cR","cS","push","count15","starter","cardArray","concat","fifteenCount","count15Helper","index","subtotal","i","length","sub","countFlush","uniqBy","countPairs","pairs","j","countRuns","uniqueRanks","m","rankByCount","Object","fromEntries","uR","cA","startIndex","longestStreak","currentStreak","numberOfRuns","k","countNibs","findIndex","countAll","calculateMean","numbers","reduce","acc","curr","calculateMedianSorted","calculateMaximumPoints","defaultExport","createPointTree","dealtHand","remainingDeck","differenceWith","isEqual","createRemainingDeck","allHands","subGroupSize","subGroupArray","indicesToRemove","subGroupHelper","indicesArray","toRemoveSize","minIndex","hand","iA","smallerArray","cloneDeep","splice","createSubGroups","pointBreakdown","aH","pointPossibilities","rD","roundPoints","IQR","slice","Math","floor","defaultStartState","c1r","c1s","c2r","c2s","c3r","c3s","c4r","c4s","c5r","c5s","c6r","c6s","App","useState","formState","setFormState","cardData","setCardData","changeHandler","element","fieldName","value","preventDefault","target","id","onSubmit","event","parseInt","pointBreak","HelperFunctions","htmlFor","name","onChange","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e2d8f0b.chunk.js","sourcesContent":["import React from 'react';\n\nexport type CardType = {\n  rank: number,\n  suite: string,\n};\n\nexport type EntryType = {\n  cards: Array<CardType>,\n  mean: number,\n  max: number,\n  firstQuartile: number,\n  secondQuartile: number,\n  thirdQuartile: number,\n};\n\ntype DisplayResultsProps = {\n  entries: Array<EntryType>,\n};\n\nconst rankObject = [\n  'A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'\n];\n\ntype SuiteMap = {\n  [key:  string]: string | undefined\n}\nconst suiteObject: SuiteMap = {\n  S: '\\u2660',\n  H: '\\u2665',\n  D: '\\u2666',\n  C: '\\u2663',\n};\n\nconst DisplayResults: React.FC<DisplayResultsProps> = ({entries}) => {\n  entries.sort((a, b) => b.mean - a.mean);\n  return (\n    <table>\n      <caption>Hand Decision Breakdown</caption>\n      <thead>\n        <tr>\n          <th>1st Card</th>\n          <th>2nd Card</th>\n          <th>3rd Card</th>\n          <th>4th Card</th>\n          <th>Avg Points</th>\n          <th>Max Points</th>\n          <th>First Quartile</th>\n          <th>Median</th>\n          <th>Third Quartile</th>\n        </tr>\n      </thead>\n      <tbody>\n      {\n        entries.map((e: EntryType) => {\n          return (\n            <tr className=\"EntryRow\">\n              {\n                e.cards.map((c: CardType) => {\n                  return (\n                    <td className=\"CardBox\">{`${rankObject[c.rank - 1]}${suiteObject[c.suite]}`}</td>\n                  );\n                })\n              }\n              <td className=\"PointsBox\">{e.mean.toFixed(2)}</td>\n              <td>{e.max}</td>\n              <td>{e.firstQuartile}</td>\n              <td>{e.secondQuartile}</td>\n              <td>{e.thirdQuartile}</td>\n            </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n  );\n};\n\nexport default DisplayResults; ","import { CardType, EntryType } from './displayResults';\nimport _ from 'lodash';\n\nexport const cardRanks = _.range(1, 14);\nexport const cardSuites = ['H', 'D', 'S', 'C'];\n\nexport const deck: Array<CardType> = [];\ncardRanks.forEach(cR => {\n  cardSuites.forEach(cS => {\n    deck.push({rank: cR, suite: cS});\n  });\n});\n\nconst count15 = (cards: Array<CardType>, starter: CardType) => {\n  const cardArray = _.concat(cards, starter);\n  let fifteenCount = 0;\n  const count15Helper = (index: number, subtotal: number) => {\n    for (let i = index; i < cardArray.length; i += 1) {\n      let sub = subtotal + (cardArray[i].rank <= 10 ? cardArray[i].rank : 10);\n      if (sub === 15) {\n        fifteenCount += 2;\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      else if (sub < 15) count15Helper(i+1, sub);\n    }\n  };\n  count15Helper(0, 0);\n  return fifteenCount;\n};\n\n export const countFlush = (cards: Array<CardType>, starter: CardType) => {\n  if(_.uniqBy(cards, 'suite').length === 1) {\n    const points = cards[0].suite === starter.suite ? 5 : 4;\n    return points;\n  }\n  return 0;\n}\n\nconst countPairs = (cards: Array<CardType>, starter: CardType) => {\n  const cardArray = _.concat(cards, starter);\n  cardArray.sort((a, b) => a.rank - b.rank);\n  let pairs = 0;\n  for(let i = 0; i < cardArray.length - 1; i += 1) {\n    for(let j = i + 1; j < cardArray.length - 1; j += 1) {\n      if(cardArray[i].rank !== cardArray[j].rank) break;\n      pairs += 1;\n    }\n  }\n  const points = pairs * 2;\n  return points;\n};\n\nconst countRuns = (cards: Array<CardType>, starter: CardType) => {\n  const cardArray = _.concat(cards, starter);\n  const uniqueRanks = _.uniqBy(cardArray, 'rank').map(m => m.rank).sort((a, b) => a - b);\n  const rankByCount = Object.fromEntries(uniqueRanks.map(uR => [uR, 0]));\n  cardArray.forEach(cA => rankByCount[cA.rank] += 1);\n  let startIndex = 0, longestStreak = 1, currentStreak = 1, numberOfRuns = 0;\n  for(let i = 0; i < uniqueRanks.length; i += 1) {\n    currentStreak = 1;\n    for(let j = i+1; j < uniqueRanks.length; j += 1) {\n      if(uniqueRanks[j] === uniqueRanks[j-1] + 1) {\n        currentStreak += 1;\n        continue;\n      }\n      break;\n    }\n    if (currentStreak > longestStreak) {\n      longestStreak = currentStreak;\n      currentStreak = 1;\n      startIndex = i;\n    }\n  }\n  if (longestStreak > 2) {\n    numberOfRuns = 1;\n    for (let k = 0; k < longestStreak; k++) {\n      numberOfRuns *= rankByCount[uniqueRanks[startIndex + k]]; \n    }\n    const points = numberOfRuns * longestStreak;\n    return points;\n  }\n  return 0;\n};\n\nconst countNibs = (cards: Array<CardType>, starter: CardType) => {\n  const points = (_.findIndex(cards, c => c.suite === starter.suite && c.rank === 11) >= 0) ? 1 : 0;\n  return points;\n};\n\nconst countAll = (cards: Array<CardType>, starter: CardType) => {\n  const points15 = count15(cards, starter); \n  const pointsPairs = countPairs(cards, starter);\n  const pointsRun = countRuns(cards, starter);\n  const pointsNibs = countNibs(cards, starter);\n  const pointsFlush = countFlush(cards, starter);\n  const points = points15 + pointsPairs + pointsRun + pointsNibs + pointsFlush;\n  return points;\n}\n\nconst createSubGroups = (dealtHand: Array<CardType>, subGroupSize: number) => {\n  const subGroupArray: Array<Array<CardType>> = [];\n  const indicesToRemove = dealtHand.length - subGroupSize;\n  const subGroupHelper = (indicesArray: Array<number>, toRemoveSize: number, minIndex: number) => {\n    if (toRemoveSize === 0) {\n      const hand: Array<CardType> = [];\n      indicesArray.forEach(iA => {\n        hand.push(dealtHand[iA]);\n      });\n      subGroupArray.push(hand);\n      return;\n    }\n    for (let i = minIndex; i < indicesArray.length; i += 1) {\n      let smallerArray = _.cloneDeep(indicesArray);\n      smallerArray.splice(i, 1);\n      subGroupHelper(smallerArray, toRemoveSize - 1, minIndex + 1);\n    }\n  };\n  subGroupHelper(_.range(0, dealtHand.length), indicesToRemove, 0);\n  return subGroupArray;\n};\n\nconst createRemainingDeck = (dealtHand: Array<CardType>, deck: Array<CardType>) => {\n  return _.differenceWith(deck, dealtHand, _.isEqual);\n};\n\nconst calculateMean = (numbers: Array<number>) => {\n  return numbers.reduce((acc, curr) => acc + curr) / numbers.length;\n};\n\nconst calculateMedianSorted = (numbers: Array<number>) => {\n  if (numbers.length % 2 === 1) {\n    return numbers[numbers.length/2];\n  }\n  return (numbers[numbers.length/2] + numbers[numbers.length/2-1]) / 2\n};\n\nconst calculateIQR = (numbers: Array<number>) => {\n  numbers.sort((a, b) => a - b);\n  if (numbers.length % 2 === 1) {\n    return [\n      calculateMedianSorted(_.slice(numbers, 0, Math.floor(numbers.length / 2))), \n      numbers[numbers.length/2], \n      calculateMedianSorted(_.slice(numbers, numbers.length/2 + 1))\n    ];\n  }\n  return [\n    calculateMedianSorted(_.slice(numbers, 0, Math.floor(numbers.length / 2 ))), \n    (numbers[numbers.length/2] + numbers[numbers.length/2 +1]) / 2,\n    calculateMedianSorted(_.slice(numbers, numbers.length/2 ))\n  ];\n};\n\nconst calculateMaximumPoints = (numbers: Array<number>) => {\n  numbers.sort((a, b) => a - b);\n  return numbers[numbers.length - 1];\n}\n\nconst createPointTree = (dealtHand: Array<CardType>, deck: Array<CardType>) => {\n  const remainingDeck = createRemainingDeck(dealtHand, deck);\n  const allHands = createSubGroups(dealtHand, 4);\n  const pointBreakdown: Array<EntryType> = [];\n  allHands.forEach(aH => {\n    let pointPossibilities: Array<number> = [];\n    remainingDeck.forEach(rD => {\n      const roundPoints = countAll(aH, rD);\n      pointPossibilities.push(roundPoints);\n    });\n    const IQR = calculateIQR(pointPossibilities);\n    pointBreakdown.push({\n      cards: _.cloneDeep(aH), \n      mean: calculateMean(pointPossibilities), \n      max: calculateMaximumPoints(pointPossibilities), \n      firstQuartile: IQR[0], \n      secondQuartile: IQR[1], \n      thirdQuartile: IQR[2]\n    });\n  });\n  return pointBreakdown;\n};\n\nconst defaultExport = {\n  count15,\n  countFlush,\n  countPairs,\n  countRuns,\n  countNibs,\n  countAll,\n  createPointTree,\n};\n\nexport default defaultExport;","import React, { useState } from 'react';\nimport './App.css';\nimport DisplayResults, { EntryType } from './displayResults';\nimport HelperFunctions, { deck } from './helperFunctions';\n\nconst defaultStartState = {\n  c1r: '1',\n  c1s: 'H',\n  c2r: '2',\n  c2s: 'S',\n  c3r: '3',\n  c3s: 'D',\n  c4r: '4',\n  c4s: 'C',\n  c5r: '5',\n  c5s: 'H',\n  c6r: '6',\n  c6s: 'S',\n};\n\nconst App: React.FC = () => {\n  const [formState, setFormState] = useState(defaultStartState);\n  const [cardData, setCardData] = useState<Array<EntryType>>([]);\n  const changeField = (fieldName: string, value: string) => {\n    setFormState({...formState, [fieldName]: value});\n  };\n  const changeHandler = (element: any) => {\n    element.preventDefault();\n    changeField(element.target.id, element.target.value);\n  }\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n    const { c1r, c1s, c2r, c2s, c3r, c3s, c4r, c4s, c5r, c5s, c6r, c6s } = formState;\n    const hand = [\n      { suite: c1s, rank: parseInt(c1r, 10) },\n      { suite: c2s, rank: parseInt(c2r, 10) },\n      { suite: c3s, rank: parseInt(c3r, 10) },\n      { suite: c4s, rank: parseInt(c4r, 10) }, \n      { suite: c5s, rank: parseInt(c5r, 10) }, \n      { suite: c6s, rank: parseInt(c6r, 10) },\n    ];\n    const pointBreak: Array<EntryType> = HelperFunctions.createPointTree(hand, deck);\n    setCardData(pointBreak);\n  }\n  return (\n    <div className=\"App\">\n      <body>\n        <form onSubmit={handleSubmit} className=\"InputForm\">\n          <div className=\"CardSelector\">\n            <label htmlFor=\"card1rank\">Rank 1:</label>\n            <select name=\"card1rank\" id=\"c1r\" value={formState.c1r} onChange={changeHandler}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n              <option value=\"11\">J</option>\n              <option value=\"12\">Q</option>\n              <option value=\"13\">K</option>\n            </select>\n            <label htmlFor=\"card1suite\">Suite 1:</label>\n            <select name=\"card1suite\" id=\"c1s\" value={formState.c1s} onChange={changeHandler}>\n              <option value=\"H\">Hearts</option>\n              <option value=\"S\">Spades</option>\n              <option value=\"C\">Clubs</option>\n              <option value=\"D\">Diamonds</option>\n            </select>\n          </div>\n          <div className=\"CardSelector\">\n            <label htmlFor=\"card2rank\">Rank 2:</label>\n            <select name=\"card2rank\" id=\"c2r\" value={formState.c2r} onChange={changeHandler}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n              <option value=\"11\">J</option>\n              <option value=\"12\">Q</option>\n              <option value=\"13\">K</option>\n            </select>\n            <label htmlFor=\"card2suite\">Suite 2:</label>\n            <select name=\"card2suite\" id=\"c2s\" value={formState.c2s} onChange={changeHandler}>\n              <option value=\"H\">Hearts</option>\n              <option value=\"S\">Spades</option>\n              <option value=\"C\">Clubs</option>\n              <option value=\"D\">Diamonds</option>\n            </select>\n          </div>\n          <div className=\"CardSelector\">\n            <label htmlFor=\"card3rank\">Rank 3:</label>\n            <select name=\"card3rank\" id=\"c3r\" value={formState.c3r} onChange={changeHandler}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n              <option value=\"11\">J</option>\n              <option value=\"12\">Q</option>\n              <option value=\"13\">K</option>\n            </select>\n            <label htmlFor=\"card3suite\">Suite 3:</label>\n            <select name=\"card3suite\" id=\"c3s\" value={formState.c3s} onChange={changeHandler}>\n              <option value=\"H\">Hearts</option>\n              <option value=\"S\">Spades</option>\n              <option value=\"C\">Clubs</option>\n              <option value=\"D\">Diamonds</option>\n            </select>\n          </div>\n          <div className=\"CardSelector\">\n            <label htmlFor=\"card4rank\">Rank 4:</label>\n            <select name=\"card4rank\" id=\"c4r\" value={formState.c4r} onChange={changeHandler}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n              <option value=\"11\">J</option>\n              <option value=\"12\">Q</option>\n              <option value=\"13\">K</option>\n            </select>\n            <label htmlFor=\"card4suite\">Suite 4:</label>\n            <select name=\"card4suite\" id=\"c4s\" value={formState.c4s} onChange={changeHandler}>\n              <option value=\"H\">Hearts</option>\n              <option value=\"S\">Spades</option>\n              <option value=\"C\">Clubs</option>\n              <option value=\"D\">Diamonds</option>\n            </select>\n          </div>\n          <div className=\"CardSelector\">\n            <label htmlFor=\"card5rank\">Rank 5:</label>\n            <select name=\"card5rank\" id=\"c5r\" value={formState.c5r} onChange={changeHandler}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n              <option value=\"11\">J</option>\n              <option value=\"12\">Q</option>\n              <option value=\"13\">K</option>\n            </select>\n            <label htmlFor=\"card5suite\">Suite 5:</label>\n            <select name=\"card5suite\" id=\"c5s\" value={formState.c5s} onChange={changeHandler}>\n              <option value=\"H\">Hearts</option>\n              <option value=\"S\">Spades</option>\n              <option value=\"C\">Clubs</option>\n              <option value=\"D\">Diamonds</option>\n            </select>\n          </div>\n          <div className=\"CardSelector\">\n            <label htmlFor=\"card6rank\">Rank 6:</label>\n            <select name=\"card6rank\" id=\"c6r\" value={formState.c6r} onChange={changeHandler}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n              <option value=\"11\">J</option>\n              <option value=\"12\">Q</option>\n              <option value=\"13\">K</option>\n            </select>\n            <label htmlFor=\"card6suite\">Suite 6:</label>\n            <select name=\"card6suite\" id=\"c6s\" value={formState.c6s} onChange={changeHandler}>\n              <option value=\"H\">Hearts</option>\n              <option value=\"S\">Spades</option>\n              <option value=\"C\">Clubs</option>\n              <option value=\"D\">Diamonds</option>\n            </select>\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <DisplayResults entries={cardData}/>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}